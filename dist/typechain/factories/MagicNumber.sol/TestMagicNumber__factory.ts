/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestMagicNumber,
  TestMagicNumberInterface,
} from "../../MagicNumber.sol/TestMagicNumber";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_num",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "magicNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_num",
        type: "uint256",
      },
    ],
    name: "setMagicNumber",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516100e63803806100e683398101604081905261002f91610037565b600055610050565b60006020828403121561004957600080fd5b5051919050565b60888061005e6000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c80632ba2ed9814603757806341837a2f146049575b600080fd5b604760423660046063565b600055565b005b605160005481565b60405190815260200160405180910390f35b600060208284031215607457600080fd5b503591905056fea164736f6c634300080a000a";

type TestMagicNumberConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestMagicNumberConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestMagicNumber__factory extends ContractFactory {
  constructor(...args: TestMagicNumberConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _num: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestMagicNumber> {
    return super.deploy(_num, overrides || {}) as Promise<TestMagicNumber>;
  }
  override getDeployTransaction(
    _num: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_num, overrides || {});
  }
  override attach(address: string): TestMagicNumber {
    return super.attach(address) as TestMagicNumber;
  }
  override connect(signer: Signer): TestMagicNumber__factory {
    return super.connect(signer) as TestMagicNumber__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestMagicNumberInterface {
    return new utils.Interface(_abi) as TestMagicNumberInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestMagicNumber {
    return new Contract(address, _abi, signerOrProvider) as TestMagicNumber;
  }
}
